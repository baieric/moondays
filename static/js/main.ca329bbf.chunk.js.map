{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["ics","require","FileSaver","slugify","Option","Select","pad","n","width","z","length","Array","join","formatDateList","events","map","event","num","makeEventList","year","month","day","recurrences","title","description","i","solar","moment","date","start","duration","days","push","App","useState","modal","setModal","drawerVisible","setDrawerVisible","confirmMessage","setConfirmMessage","Form","useForm","form","onDateChange","fields","getFieldsValue","className","gutter","style","marginBottom","alignItems","xs","sm","md","lg","xl","href","span","ghost","size","shape","icon","QuestionOutlined","onClick","wrapperCol","layout","onFinish","values","createEvents","error","value","FrownOutlined","extra","blob","Blob","type","saveAs","SmileOutlined","initialValues","Item","name","rules","required","message","placeholder","Group","compact","display","marginRight","noStyle","onChange","min","max","TextArea","rows","htmlType","visible","onCancel","footer","placement","closable","onClose","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.ca329bbf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport {\n  Button,\n  Input,\n  InputNumber,\n  Form,\n  Row,\n  Col,\n  Modal,\n  Result,\n  Drawer,\n  Select,\n} from \"antd\";\nimport \"antd/dist/antd.dark.css\";\nimport {\n  QuestionOutlined,\n  SmileOutlined,\n  FrownOutlined,\n} from '@ant-design/icons';\nimport moment from 'moment';\nimport 'moment-lunar';\n\nconst ics = require('ics');\nconst FileSaver = require('file-saver');\nconst slugify = require('slugify');\nconst {Option} = Select;\n\nconst pad = (n, width, z) => {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nconst formatDateList = events => {\n  if (events.length < 4) {\n    return events.map(\n      event => event[\"start\"].map(num => pad(num, 2)).join(\"/\")\n    ).join(\", \");\n  } else {\n    const shortList = [events[0], events[1], \"...\", events[events.length-1]];\n    return shortList.map(\n      event => event === \"...\" ? event : event[\"start\"].map(num => pad(num, 2)).join(\"/\")\n    ).join(\", \");\n  }\n}\n\nconst makeEventList = (year, month, day, recurrences, title, description) => {\n  const events = [];\n\n  for (var i = 0; i < recurrences; i++) {\n    const solar = moment()\n      .year(year + i)\n      .month(month)\n      .date(day)\n      .solar();\n\n    const event = {\n      title: title,\n      start: [solar.year(), solar.month() + 1, solar.date()],\n      duration: {days: 1},\n      description: description,\n    };\n\n    events.push(event);\n  }\n\n  return events;\n}\n\nfunction App() {\n  const [modal, setModal] = useState(null);\n  const [drawerVisible, setDrawerVisible] = useState(false);\n  const [confirmMessage, setConfirmMessage] = useState(null);\n  const [form] = Form.useForm();\n\n  const onDateChange = () => {\n    const fields = form.getFieldsValue();\n    const year = fields[\"year\"];\n    const month = fields[\"month\"];\n    const day = fields[\"day\"];\n    const recurrences = fields[\"recurrences\"];\n\n    if (fields && year && month && day && recurrences && year > 1890 && year < 2061 && recurrences > 0 && recurrences < 51){\n      const events = makeEventList(year, month, day, recurrences, null, null);\n      setConfirmMessage(`Download ${events.length} ${events.length === 1 ? \"event\" : \"events\"}: ${formatDateList(events)}.`);\n    } else {\n      setConfirmMessage(null);\n    }\n  }\n\n  const onFinish = values => {\n    const {month, day, year, title, recurrences, description} = values;\n    const events = makeEventList(year, month, day, recurrences, title, description);\n\n    const { error, value } = ics.createEvents(events);\n    if (error) {\n      setModal(<Result\n        icon={<FrownOutlined />}\n        title=\"Something went wrong!\"\n        extra={\n          <div>\n            <p>Sorry! Let Eric know his app is broken!</p>\n          </div>}\n      />);\n      return;\n    }\n\n    const blob = new Blob([value], {type: \"text/plain;charset=utf-8\"});\n    FileSaver.saveAs(blob, `${slugify(title)}.ics`);\n    setModal(<Result\n      icon={<SmileOutlined />}\n      title={`${title} downloaded!`}\n      extra={\n        <div>\n          <p>{`Your calendar file contains ${events.length} ${events.length === 1 ? \"event\" : \"events\"} on ${formatDateList(events)}.`}</p>\n          <p>Import this file to your favourite calendar app! Drag and drop usually works.</p>\n          <p><a href=\"https://calendar.google.com/calendar/r/settings/export\">Import to Google Calendar</a></p>\n          <p>Note: If you want to delete these events, you will have to delete each one manually.</p>\n        </div>}\n    />);\n  };\n\n  const days = [];\n  for (var i = 1; i <= 30; i++) {\n      days.push(i);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"white\">M◐◑N DAYS</h1>\n      <Row gutter={8} style={{marginBottom: 8, alignItems: \"center\"}}>\n        <Col xs={22} sm={14} md={14} lg={12} xl={12}>\n          <h3 className=\"white\" style={{marginBottom: 16}}>Create lunar calendar events. Made by <a href=\"https://ericbai.co/\">Eric Bai</a>.</h3>\n        </Col>\n        <Col span={2}>\n          <Button ghost size=\"small\" shape=\"circle\" icon={<QuestionOutlined />} onClick={() => setDrawerVisible(true)}/>\n        </Col>\n      </Row>\n      <Form\n        form={form}\n        wrapperCol={{ span: 12 }}\n        layout=\"horizontal\"\n        onFinish={onFinish}\n        initialValues={{\n          recurrences: 15,\n          year: moment().year(),\n        }}\n      >\n        <Form.Item name=\"title\" rules={[{ required: true, message: \"Event title is required.\" }]}>\n          <Input placeholder=\"Add event title\" size=\"large\" />\n        </Form.Item>\n        <Form.Item>\n          <Input.Group compact style={{display: \"flex\", alignItems: \"center\"}}>\n            <div className=\"white\" style={{ marginRight: 8 }} >Lunar date:</div>\n            <Form.Item noStyle name=\"month\" rules={[{ required: true, message: \"Month is required.\" }]}>\n              <Select\n                placeholder=\"Select month\"\n                onChange={onDateChange}\n              >\n                <Option value={0}>1st month</Option>\n                <Option value={1}>2nd month</Option>\n                <Option value={2}>3rd month</Option>\n                {[3, 4, 5, 6, 7, 8, 9, 10, 11].map(i => <Option value={i}>{`${i+1}th month`}</Option>)}\n              </Select>\n            </Form.Item>\n            <Form.Item noStyle name=\"day\" rules={[{ required: true, message: \"Day is required.\" }]}>\n              <Select\n                placeholder=\"Select day\"\n                onChange={onDateChange}\n              >\n                {days.map(i => <Option value={i}>{i}</Option>)}\n              </Select>\n            </Form.Item>\n          </Input.Group>\n        </Form.Item>\n        <Form.Item>\n          <Input.Group compact style={{display: \"flex\", alignItems: \"center\"}}>\n            <div className=\"white\" style={{ marginRight: 8 }} >Annually for </div>\n            <Form.Item noStyle name=\"recurrences\" rules={[{ required: true, message: \"Number of recurrences is required.\" }]}>\n              <InputNumber onChange={onDateChange} min={1} max={50} style={{ marginRight: 8 }} />\n            </Form.Item>\n            <div className=\"white\" style={{ marginRight: 8 }}>years starting in</div>\n            <Form.Item noStyle name=\"year\" rules={[{ required: true, message: \"Year is required.\" }]}>\n              <InputNumber onChange={onDateChange} min={1890} max={2060} />\n            </Form.Item>\n          </Input.Group>\n        </Form.Item>\n        <Form.Item name=\"description\">\n          <Input.TextArea rows={4} placeholder=\"Add description (optional)\" />\n        </Form.Item>\n        <Form.Item>\n          <Button ghost shape=\"round\" htmlType=\"submit\">\n            Download Events\n          </Button>\n        </Form.Item>\n        {confirmMessage != null && <p>{confirmMessage}</p>}\n      </Form>\n\n      <Modal\n          visible={modal != null}\n          onCancel={() => setModal(null)}\n          footer={null}\n        >\n        {modal}\n        </Modal>\n\n      <Drawer\n        title=\"ABOUT M◐◑N DAYS\"\n        placement=\"right\"\n        closable={false}\n        onClose={() => setDrawerVisible(false)}\n        visible={drawerVisible}\n      >\n        <p>\n          My dad celebrates his birthday according to the <a href=\"https://en.wikipedia.org/wiki/Chinese_calendar\">Chinese calendar</a>. Sadly, calendar apps do not let you create a recurring event based on these traditional calendars.\n          I made M◐◑N DAYS so that anyone can create annual lunar calendar events.\n        </p>\n        <p>\n          The most commonly used calendar in the world is the Gregorian calendar.\n          Some traditional holidays, such as Chinese New Year, are based on a lunisolar calendar, often colloquially called the lunar calendar.\n        </p>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}